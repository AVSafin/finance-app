from flask import Flask, request, redirect, url_for
from datetime import datetime

from sheets import (
    load_transactions_from_sheet,
    load_regular_income,
    load_irregular_income,
    load_regular_payments,
    load_loans,
)
from db import (recreate_db, save_dataframe, read_transactions,
                check_table_exists, calculate_current_balance, read_table)

app = Flask(__name__)


# üìç –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route("/", methods=["GET"])
def home():
    message = request.args.get("message")

    current_month = datetime.today().strftime('%Y-%m')

    # –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü –Ω–µ—Ç ‚Äî –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º
    if not check_table_exists():
        recreate_db()
        update_all_data()

    df = read_transactions(month=current_month)

    balance = calculate_current_balance()

    html = f"""
    <h2>–¢—Ä–∞—Ç—ã –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü</h2>
    <p><b>üí∞ –ë–∞–ª–∞–Ω—Å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b> {balance:,.2f} ‚ÇΩ</p>
    

    <form action="/update-db" method="post">
        <button type="submit">üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∏–∑ Google Sheets</button>
    </form>
    <br>
    """

    if message:
        html += f"<p style='color: green; font-weight: bold;'>‚úÖ {message}</p>"

    html += df.to_html(index=False)

    # –í—ã–≤–æ–¥ —Ç–µ—Å—Ç —Ç–∞–±–ª–∏—Ü—ã
    df_salary = read_table("regular_payments").sort_values(
        "–î–∞—Ç–∞", ascending=True).tail(5)

    html += "<h3>–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–∞–±–ª–∏—Ü</h3>"
    html += df_salary.to_html(index=False)
    
    return html


# üìç –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã
@app.route("/update-db", methods=["POST"])
def update_db():
    recreate_db()
    update_all_data()
    return redirect(url_for("home", message="–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!"))


# üìç –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
def update_all_data():
    save_dataframe(load_transactions_from_sheet(), "transactions")
    save_dataframe(load_regular_income(), "regular_income")
    save_dataframe(load_irregular_income(), "irregular_income")
    save_dataframe(load_regular_payments(), "regular_payments")
    save_dataframe(load_loans(), "loans")


# üìç –ó–∞–ø—É—Å–∫
app.run(host="0.0.0.0", port=81)

